package in.co.sunrays.model;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import in.co.sunrays.bean.CollegeBean;
import in.co.sunrays.bean.SubjectBean;
import in.co.sunrays.exception.ApplicationException;
import in.co.sunrays.exception.DatabaseException;
import in.co.sunrays.util.JDBCDataSource;

public class SubjectModel {
	public Integer nextPK() throws DatabaseException {
		// log.debug("Model nextPK Started");
		Connection conn = null;
		int pk = 0;
		try {
			conn = JDBCDataSource.getConnection();
			PreparedStatement pstmt = conn.prepareStatement("SELECT MAX(ID) FROM ST_SUBJECT");
			ResultSet rs = pstmt.executeQuery();
			while (rs.next()) {
				pk = rs.getInt(1);
			}
			rs.close();

		} catch (Exception e) {
			// log.error("Database Exception..", e);
			throw new DatabaseException("Exception : Exception in getting PK");
		} finally {
			JDBCDataSource.closeConnection(conn);
		}
		// log.debug("Model nextPK End");
		return pk + 1;
	}
	public long add(SubjectBean bean) throws Exception {
		//log.debug("Model add Started");
		Connection conn = null;
		int pk = 0;

		SubjectBean duplicateSubjectName = findByName(bean.getSubject_Name());

		if (duplicateSubjectName != null) {
			throw new Exception("College Name already exists");
		}
		try {
			conn = JDBCDataSource.getConnection();
			pk = nextPK();
			conn.setAutoCommit(false); 
			PreparedStatement pstmt = conn.prepareStatement("INSERT INTO ST_SUBJECT VALUES(?,?,?,?,?,?,?,?,?)");
			pstmt.setInt(1, pk);
			pstmt.setString(2, bean.getSubject_Name());
			pstmt.setString(3, bean.getCourse_Name());
			pstmt.setInt(4, bean.getCourse_Id());
			pstmt.setString(5, bean.getDescription());
			pstmt.setString(6, bean.getCreatedBy());
			pstmt.setString(7, bean.getModifiedBy());
			pstmt.setTimestamp(8, bean.getCreatedDatetime());
			pstmt.setTimestamp(9, bean.getModifiedDatetime());
			pstmt.executeUpdate();
			conn.commit(); // End transaction
			pstmt.close();
		} catch (Exception e) {
			e.printStackTrace();
			try {
				conn.rollback();
			} catch (Exception ex) {
				ex.printStackTrace();
				throw new ApplicationException("Exception : add rollback exception " + ex.getMessage());
			}
			throw new ApplicationException("Exception : Exception in add College");
		} finally {
			JDBCDataSource.closeConnection(conn);
		}
		//log.debug("Model add End");
		return pk;
	}
	
	public SubjectBean findByName(String name) throws ApplicationException {
		//log.debug("Model findByName Started");
		StringBuffer sql = new StringBuffer("SELECT * FROM ST_SUBJECT WHERE NAME=?");
		SubjectBean bean = null;
		Connection conn = null;
		try {
			conn = JDBCDataSource.getConnection();
			PreparedStatement pstmt = conn.prepareStatement(sql.toString());
			pstmt.setString(1, name);
			ResultSet rs = pstmt.executeQuery();
			while (rs.next()) {
				bean=new SubjectBean();
				pstmt.setInt(1, pk);
				pstmt.setString(2, bean.getSubject_Name());
				pstmt.setString(3, bean.getCourse_Name());
				pstmt.setInt(4, bean.getCourse_Id());
				pstmt.setString(5, bean.getDescription());
				pstmt.setString(6, bean.getCreatedBy());
				pstmt.setString(7, bean.getModifiedBy());
				pstmt.setTimestamp(8, bean.getCreatedDatetime());
				pstmt.setTimestamp(9, bean.getModifiedDatetime());
			}
			rs.close();
		} catch (Exception e) {
			//log.error("Database Exception..", e);
			throw new ApplicationException("Exception : Exception in getting College by Name");
		} finally {
			JDBCDataSource.closeConnection(conn);
		}
		//log.debug("Model findByName End");
		return bean;
	}

}
