package in.co.sunrays.controller;

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.omg.CORBA.Request;

import in.co.sunrays.bean.BaseBean;
import in.co.sunrays.bean.CollegeBean;
import in.co.sunrays.exception.ApplicationException;
import in.co.sunrays.exception.DuplicateRecordException;
import in.co.sunrays.model.CollegeModel;
import in.co.sunrays.util.DataUtility;
import in.co.sunrays.util.DataValidator;
import in.co.sunrays.util.PropertyReader;
import in.co.sunrays.util.ServletUtility;

@WebServlet("/ctl/CollegeCtl")
public class CollegeCtl extends BaseCtl {

	protected boolean validate(HttpServletRequest request) {
		boolean pass = true;
		if (DataValidator.isNull(request.getParameter("name"))) {
			request.setAttribute("name", PropertyReader.getValue("error.require", "name"));
			pass = false;
		} else if (!DataValidator.isName(request.getParameter("name")))
			request.setAttribute("name", "Name must contain only Characters ");
		pass = false;

		if (DataValidator.isNull(request.getParameter("address"))) {
			request.setAttribute("address", PropertyReader.getValue("error.require", "Address"));
			pass = false;
		}

		if (DataValidator.isNull(request.getParameter("state"))) {
			request.setAttribute("state", PropertyReader.getValue("error.require", "State"));
			pass = false;
		} else if (!DataValidator.isName(request.getParameter("state"))) {
			request.setAttribute("state", "State Name must contain only  Characters ");
			pass = false;
		}
		if (DataValidator.isNull(request.getParameter("city"))) {
			request.setAttribute("city", PropertyReader.getValue("error.require", "City"));
			pass = false;
		} else if (!DataValidator.isName(request.getParameter("city"))) {
			request.setAttribute("city", "City Name must contain only  Characters ");
			pass = false;
		}
		if (DataValidator.isNull(request.getParameter("mobileno"))) {
			request.setAttribute("mobileno", PropertyReader.getValue("error.require", "Mobile No"));
			pass = false;
		} else if (!DataValidator.isMobileNo(request.getParameter("mobileno"))) {
			request.setAttribute("mobileno", "Mobile No. must be 10 Digit and No. Series start with 6-9");
		}
		return pass;
	}

	@Override
	protected BaseBean populateBean(HttpServletRequest request) {
		CollegeBean cb = new CollegeBean();
		cb.setId(DataUtility.getLong(request.getParameter("id")));
		cb.setName(DataUtility.getString(request.getParameter("name")));
		cb.setAddress(DataUtility.getString(request.getParameter("address")));
		cb.setState(DataUtility.getString(request.getParameter("state")));
		cb.setCity(DataUtility.getString(request.getParameter("city")));
		cb.setPhoneNo(DataUtility.getString(request.getParameter("mobileno")));

		return cb;
	}

	@Override
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		long id = DataUtility.getLong(request.getParameter("id"));
		CollegeModel cm = new CollegeModel();
		if (id > 0) {
			CollegeBean cb;
			try {
				cb = cm.findByPK(id);
				ServletUtility.setBean(cb, request);
			} catch (Exception e) {
				e.printStackTrace();
			}

		}
		ServletUtility.forward(getView(), request, response);
	}

	@Override
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		System.out.println("insert45");
		String op = DataUtility.getString(request.getParameter("operation"));
		CollegeModel cm = new CollegeModel();
		long id = DataUtility.getLong(request.getParameter("id"));
		if (OP_SAVE.equalsIgnoreCase(op) || OP_UPDATE.equals(op)) {
			CollegeBean cb = (CollegeBean) populateBean(request);

			try {
				if (id > 0) {
					cm.update(cb);
					ServletUtility.setBean(cb, request);
					ServletUtility.setSuccessMessage("Data is successfully updated", request);
				} else {
					long pk = cm.add(cb);
					cb.setId(pk);
					ServletUtility.setBean(cb, request);
					ServletUtility.setSuccessMessage("Data is successfully saved", request);
				}

			} catch (Exception e) {
				e.printStackTrace();
			}
		} else if (OP_DELETE.equals(op)) {
			CollegeBean cb = (CollegeBean) populateBean(request);
		}
		ServletUtility.forward(getView(), request, response);
	}

	@Override
	protected String getView() {
		return ORSView.COLLEGE_VIEW;
	}
}
