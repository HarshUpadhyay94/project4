package in.co.sunrays.model;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import in.co.sunrays.bean.BaseBean;
import in.co.sunrays.bean.CollegeBean;
import in.co.sunrays.bean.CourseBean;
import in.co.sunrays.bean.FacultyBean;
import in.co.sunrays.bean.SubjectBean;
import in.co.sunrays.exception.ApplicationException;
import in.co.sunrays.exception.DatabaseException;
import in.co.sunrays.util.JDBCDataSource;

public class FacultyModel  {

	public Integer nextPK() throws DatabaseException {
		// log.debug("Model nextPK Started");
		Connection conn = null;
		int pk = 0;
		try {
			conn = JDBCDataSource.getConnection();
			PreparedStatement pstmt = conn.prepareStatement("SELECT MAX(ID) FROM ST_FACULTY");
			ResultSet rs = pstmt.executeQuery();
			while (rs.next()) {
				pk = rs.getInt(1);
			}
			rs.close();

		} catch (Exception e) {
			// log.error("Database Exception..", e);
			throw new DatabaseException("Exception : Exception in getting PK");
		} finally {
			JDBCDataSource.closeConnection(conn);
		}
		// log.debug("Model nextPK End");
		return pk + 1;
	}
	public long add(FacultyBean fb) throws Exception {
		//log.debug("Model add Started");
		Connection conn = null;
		int pk = 0;
		CollegeModel cm = new CollegeModel();
		CollegeBean cb = cm.findByPK(fb.getCollege_id());
		String collegeName = cb.getName();
		
		
		CourseModel crsm= new CourseModel();
		CourseBean crsb= crsm.findByPK(fb.getCourse_id());
		String CourseName=crsb.getCourse_Name();
		
		SubjectModel sm = new SubjectModel();
		SubjectBean sb = sm.findByPK(fb.getSubject_id());
		String subjectname = sb.getSubject_Name();
		
		try {
			FacultyBean bean= new FacultyBean();
			conn = JDBCDataSource.getConnection();
			pk = nextPK();
			conn.setAutoCommit(false); 
			PreparedStatement pstmt = conn.prepareStatement("INSERT INTO ST_FACULTY VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
			pstmt.setInt(1, pk);
			pstmt.setString(2, bean.getFirst_Name());
			pstmt.setString(3, bean.getLast_Name());
			pstmt.setString(4, bean.getGender());
			pstmt.setDate(5, (Date) bean.getDOJ());
			pstmt.setString(6, bean.getQualification());
			pstmt.setString(7, bean.getEmail_id());
			pstmt.setString(8, bean.getMobile_No());
			pstmt.setInt(9, bean.getCollege_id());
			pstmt.setString(10, collegeName);
			pstmt.setInt(11, bean.getCourse_id());
			pstmt.setString(12, CourseName);
			pstmt.setInt(13, bean.getSubject_id());
			pstmt.setString(14, subjectname);
			pstmt.setString(15, bean.getCreatedBy());
			pstmt.setString(16, bean.getModifiedBy());
			pstmt.setTimestamp(16, bean.getCreatedDatetime());
			pstmt.setTimestamp(17, bean.getModifiedDatetime());
			pstmt.executeUpdate();
			conn.commit(); // End transaction
			pstmt.close();
		} catch (Exception e) {
			e.printStackTrace();
			try {
				conn.rollback();
			} catch (Exception ex) {
				ex.printStackTrace();
				throw new ApplicationException("Exception : add rollback exception " + ex.getMessage());
			}
			throw new ApplicationException("Exception : Exception in add College");
		} finally {
			JDBCDataSource.closeConnection(conn);
		}
		//log.debug("Model add End");
		return pk;
	}
	private FacultyBean findByName(String course_Name) {
	
		return null;
	}
}
