package in.co.sunrays.test;

import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.Date;
import in.co.sunrays.bean.UserBean;
import in.co.sunrays.exception.ApplicationException;
import in.co.sunrays.exception.DuplicateRecordException;
import in.co.sunrays.exception.RecordNotFoundException;
import in.co.sunrays.model.UserModel;

	public class UserModelTest {

		public static void main(String[] args) throws Exception {
			// testAdd();
			//testregisteruser();
			// testupdate();
			
			// TESTCHANGEPASSWORD();
			//testforget();

		}

		private static void testforget() throws ApplicationException, RecordNotFoundException {
			// TODO Auto-generated method stub
			UserBean bean = new UserBean();
			UserModel um = new UserModel();

			boolean flag = um.forgetPassword("sbharthare14@gmail.com");

			System.out.println("test fprget  "+flag);
		}

		public static void TESTCHANGEPASSWORD() throws Exception {
			// TODO Auto-generated method stub

			UserModel um = new UserModel();
			UserBean ub = um.findByLogin("shubh@gmail.com");
			String oldPassword = ub.getPassword();
			ub.setId(1);
			ub.setPassword("12345");
			// ub.setConfirmpassword("88");
			String newPassword = ub.getPassword();

			um.changePassword(1, oldPassword, newPassword);
			System.out.println("password has been change successfully");

		}

		public static void testupdate() throws Exception {
			// TODO Auto-generated method stub
			UserBean ub = new UserBean();
			UserModel um = new UserModel();
			SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy");
			ub.setFirstName("NAYAN");
			ub.setLastName("KUMAR");
			ub.setLogin("nayankumar@gmail.com");
			ub.setPassword("12345");
			ub.setConfirmPassword("12345");
			ub.setDob(sdf.parse("11/20/2015"));
			ub.setGender("Male");
			ub.setRoleId(2);
			ub.setId(4);
			um.update(ub);

		}

		public static void testregisteruser() throws Exception {
			UserBean ub = new UserBean();
			UserModel um = new UserModel();
			SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy");

			//ub.setId(9L);
			ub.setFirstName("vipin");
			ub.setLastName("kumawat");
			ub.setLogin("rru1dhay@gmail.com");
			ub.setPassword("4664");
			ub.setConfirmPassword("4444");
			ub.setDob(sdf.parse("11/20/2015"));
			ub.setGender("Male");
			ub.setRoleId(2);
			um.registerUser(ub);
			System.out.println("Successfully register");
			System.out.println(ub.getFirstName());
			System.out.println(ub.getLogin());
			System.out.println(ub.getLastName());
			System.out.println(ub.getDob());

		}

		public static void testAdd() throws Exception {
			UserBean bean = new UserBean();
			UserModel um = new UserModel();
			SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
			bean.setFirstName("Dipak");
            bean.setLastName("Rathor");
            bean.setLogin("dipak@gmail.com");
            bean.setPassword("pass1234");
            bean.setDob(sdf.parse("31-1-1992"));
            bean.setMobileNo(7767689898L);
            bean.setRoleId(2L);
            bean.setUnSuccessfulLogin(3);
            bean.setGender("Female");
            bean.setLastLogin(new Timestamp(new Date().getTime()));
            bean.setLock("Yes");
            bean.setRegisteredIP("365d");
            bean.setLastLoginIP("LastLoginIp03");
            bean.setCreatedBy("Admin");
            bean.setModifiedBy("Admin");
            bean.setCreatedDatetime(new Timestamp(new Date().getTime()));
            bean.setModifiedDatetime(new Timestamp(new Date().getTime()));
um.add(bean);

		}
		
		public long registerUser(UserBean bean) throws Exception {

		       
	        long pk = add(bean);

	        HashMap<String, String> map = new HashMap<String, String>();
	        map.put("login", bean.getLogin());
	        map.put("password", bean.getPassword());
	        String message = EmailBuilder.getUserRegistrationMessage(map);
	        EmailMessage msg = new EmailMessage();
	        msg.setTo(bean.getLogin());
	        msg.setSubject("Registration is successful for ORS Project SunilOS");
	        msg.setMessage(message);
	        msg.setMessageType(EmailMessage.HTML_MSG);

	        EmailUtility.sendMail(msg);
	        return pk;
	    }

	    /**
	     * Reset Password of User with auto generated Password
	     *
	     * @return boolean : true if success otherwise false
	     * @param login
	     *            : User Login
	     * @throws ApplicationException
	     * @throws RecordNotFoundException
	     *             : if user not found
	     */

	    public boolean resetPassword(UserBean bean) throws Exception {

	        String newPassword = String.valueOf(new Date().getTime()).substring(0,
	                4);
	        UserBean userData = findByPK(bean.getId());
	        userData.setPassword(newPassword);

	        try {
	            update(userData);
	        } catch (Exception e) {
	            return false;
	        }

	        HashMap<String, String> map = new HashMap<String, String>();
	        map.put("login", bean.getLogin());
	        map.put("password", bean.getPassword());
	        map.put("firstName", bean.getFirstName());
	        map.put("lastName", bean.getLastName());

	        String message = EmailBuilder.getForgetPasswordMessage(map);

	        EmailMessage msg = new EmailMessage();

	        msg.setTo(bean.getLogin());
	        msg.setSubject("Password has been reset");
	        msg.setMessage(message);
	        msg.setMessageType(EmailMessage.HTML_MSG);

	        EmailUtility.sendMail(msg);

	        return true;
	    }

	   

	    public boolean forgetPassword(String login) throws Exception {
	        UserBean userData = findByLogin(login);
	        boolean flag = false;

	        if (userData == null) {
	            throw new Exception("Email ID does not exists !");

	        }

	        HashMap<String, String> map = new HashMap<String, String>();
	        map.put("login", userData.getLogin());
	        map.put("password", userData.getPassword());
	        map.put("firstName", userData.getFirstName());
	        map.put("lastName", userData.getLastName());
	        String message = EmailBuilder.getForgetPasswordMessage(map);
	        EmailMessage msg = new EmailMessage();
	        msg.setTo(login);
	        msg.setSubject("SUNARYS ORS Password reset");
	        msg.setMessage(message);
	        msg.setMessageType(EmailMessage.HTML_MSG);
	        EmailUtility.sendMail(msg);
	        flag = true;

	        return flag;
	    }
		
		
	}
